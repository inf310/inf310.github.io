(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{884:function(n,e){n.exports="# Working with files in Express\n\n---\n\n## The fs module\n\n```js\n  const fs = require('fs');\n\n  fs.writeFile('hello.txt', 'Hello file!', (error) => {\n    if (error) { return console.error('Something went wrong'); }\n  });\n\n  fs.readFile('hello.txt', 'utf8', (error, contents) => {\n    if (error) { return console.error('Something went wrong'); }\n\n    console.log(contents);\n  });\n```\n\n---\n\n## Reading and sending files\n\n```js\n  api.get('/download/:fileName', (req, res) => {\n    fs.readFile(req.params.fileName, 'utf8', (error, content) => {\n      if (error) { res.send(`An error occurred: ${error.message}`); }\n      else { res.send(content); }\n    });\n  });\n```\n\n---\n\n## Using an in-memory cache\n\n```js\n  const cache = {};\n  api.get('/download/:fileName', (req, res) => {\n    const fileName = req.params.fileName;\n\n    if (cache[fileName]) { return res.send(cache[fileName]); }\n\n    fs.readFile(req.params.fileName, 'utf8', (error, content) => {\n      if (error) { res.send(`An error occurred: ${error.message}`); }\n      else { res.send(content); }\n    });\n  });\n```\n\n---\n\n## Streaming files\n\n```js\n  api.get('/download/:fileName', (req, res) => {\n    fs.createReadStream(req.params.fileName).pipe(res);\n  });\n```\n\n---\n\n## Static middleware\n\n```js\n  app.use(\n    '/static',\n    express.static(path.join(__dirname, 'public'))\n  );\n```\n\n---\n\n## Receiving data in request body\n\n```js\n  api.post('/', (req, res) => {\n    const buffer = [];\n    req.on('data', (data) => buffer.push(data));\n    req.on('end', () => res.send(`received: ${buffer.join('')}`));\n  });\n```\n\n---\n\n## body-parser middleware\n\n```bash\n  npm install body-parser\n```\n\n-- api.js --\n\n```js\n  const bodyParser = require('body-parser');\n\n  api.use(bodyParser.json());\n\n  api.post('/form', (req, res) => {\n    fs.writeFile('form-data.json', req.body, (error) => {\n      if (error) { res.status(500).send('something went wrong'); }\n      else { res.send('form received'); }\n    });\n  });\n```\n\n---\n\n## Streaming data to a file\n\n```js\n  api.post('/save-from-stream', (req, res) => {\n    req.pipe(fs.createWriteStream('my-file.txt'))\n      .on('finish', () => res.send('done'));\n  });\n```\n\n---\n\n## Questions?\n"}}]);
//# sourceMappingURL=3.800cfa22.chunk.js.map